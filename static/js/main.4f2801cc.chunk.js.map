{"version":3,"sources":["sp1.png","scope1.png","scope2.png","pg.ico","centeredText.js","joe-puzzle.js","soph-puzzle.js","mo-puzzle.js","primeNumberProblem.js","notification.js","nat-puzzle.js","App.js","serviceWorker.js","index.js","black.jpg"],"names":["module","exports","__webpack_require__","p","Text","props","react_default","a","createElement","Container","Jumbotron","fluid","title","text","Joe","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","angle","rotate5","bind","assertThisInitialized","rotate10","rotate20","rotate90","reset","newRotation","setState","Row","style","color","fontweight","fontSize","fontFamily","Col","Button","onClick","src","require","alt","react_draggable_default","transform","concat","React","Component","SPuzzle","soph_puzzle_App","count","formStyle","width","marginLeft","KeyForm","handleChange","handleSubmit","value","disabled","event","target","answer","toUpperCase","console","log","alert","preventDefault","onSubmit","type","onChange","RenderAnswer","numCorrect","_this2","key","hints","map","mo_puzzle_KeyForm","MoPuzzle","mo_puzzle_App","Primes","Carousel","index","Item","className","Caption","Notification","Modal","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Footer","onHide","Problem","href","NPuzzle","nat_puzzle_Problem","hiddenB","background","border","padding","MemeHome","switch","BootStrapNavbar","display","justifyContent","alignItems","App_Timer","time","Timer","x","parseInt","xs","Math","floor","slice","started","timerStarted","page1","hasWon","modalShow","residualTries","hasLost","wrongAns","toggleHidden","startTimer","stopTimer","comp","timer","setInterval","clearInterval","verify","_this3","show","App_BootStrapNavbar","Tabs","defaultActiveKey","Tab","eventKey","Form","Group","controlId","Label","Control","placeholder","e","window","location","reload","notification_Notification","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f2801cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp1.b3339c88.png\";","module.exports = __webpack_public_path__ + \"static/media/scope1.131006b7.png\";","module.exports = __webpack_public_path__ + \"static/media/scope2.db1fecb6.png\";","module.exports = __webpack_public_path__ + \"static/media/pg.012fd74f.ico\";","import React, {useState} from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nexport default function Text (props) {\n  return (\n    <Container>\n        <Jumbotron fluid>\n            <Container>\n                <h1>{props.title}</h1> \n            </Container>\n            <Container>\n                <p>{props.text}</p>\n            </Container>\n        </Jumbotron>\n    </Container>\n  );\n}","import React, {useState} from 'react';\nimport Text from \"./centeredText\";\nimport { Container, Carousel, CarouselItem } from 'react-bootstrap';\nimport CarouselCaption from 'react-bootstrap/CarouselCaption';\n\nexport default function Joe (props) {\n  return (\n    <Text text=\"For those of you who do not know,\n                    I absolutely love mathematics, and everything that has to do with the field.\n                    That's why I am making my puzzle math based! If it was up to me I would have made it PDE\n                    focused, but thats a little unfair. Oh well guess I'll have to settle for a number theory\n                    problem instead. P.s: These numbers are a little big, it might be worthwhile to shrink\n                    them into smaller pieces.\" title=\"Math, Numbers, and Algorithms\" />\n    \n  );\n}","import React from 'react';\nimport Draggable from 'react-draggable';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport TB from './centeredText.js';\n\nclass App extends React.Component {\n    constructor () {\n        super()\n        this.state = {\n          angle: 0,\n        }\n        this.rotate5 = this.rotate5.bind(this)\n        this.rotate10 = this.rotate10.bind(this)\n        this.rotate20 = this.rotate20.bind(this)\n        this.rotate90 = this.rotate90.bind(this)\n        this.reset = this.reset.bind(this)\n    }\n\n    rotate5() {\n        let newRotation = this.state.angle + 5;\n        if(newRotation > 360 || newRotation < 0){\n        newRotation %= 360;\n        }\n        this.setState({angle: newRotation});\n    }\n\n    rotate10() {\n        let newRotation = this.state.angle + 10;\n        if(newRotation > 360 || newRotation < 0){\n        newRotation %= 360;\n        }\n        this.setState({angle: newRotation});\n    }\n\n    rotate20() {\n        let newRotation = this.state.angle + 20;\n        if(newRotation > 360 || newRotation < 0){\n        newRotation %= 360;\n        }\n        this.setState({angle: newRotation});\n    }\n    rotate90() {\n        let newRotation = this.state.angle + 90;\n        if(newRotation > 360 || newRotation < 0){\n        newRotation %= 360;\n        }\n        this.setState({angle: newRotation});\n    }\n\n    reset() {\n        this.setState({angle: 0});\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <TB title='Programming Is Fun!' text='Welcome to my puzzle! Fill in the blanks to complete \n                        the hint by using the tool bar! \n                        Hint: You can always hear depressed *** *** students say \"LMAO\", \n                        but a part of the word is cut off since they must run to class, and sometimes reversed \n                        because they had only one hour of sleep and do not know what they are talking about. \n                        Some students love this phrase so much that they even use it when they program. \n                        They always say it when they complain to you, like \"O, LMAO!\" (Hint2: answer is 4 digits)' />\n                    </Row>\n                    <br></br>\n                    <Row>\n                        <br></br>\n                        <Container>\n                            <Row>\n                                <div style={{color:'#126BDF', fontweight:'bold', fontSize:'28px', fontFamily:'Rockwell,\"Courier Bold\",Courier,Georgia,Times,\"Times New Roman\",serif'}}>Tool Bar</div>\n                            </Row>\n                            <Row>\n                            <div style={{color:'grey'}}>Drag the tools around the map to find hints! You could also rotate the scopes.</div>\n                            </Row>\n                            <br></br>\n                            <Row>\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Button onClick={this.rotate5}>\n                                                Rotate 5 degrees\n                                            </Button>\n                                        </Col>\n                                        <Col>\n                                            <Button onClick={this.rotate10}>\n                                                Rotate 10 degrees\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row>\n                                        <Col>\n                                            <Button onClick={this.rotate20}>\n                                                Rotate 20 degrees\n                                            </Button>\n                                        </Col>\n                                        <Col>\n                                            <Button onClick={this.rotate90}>\n                                                Rotate 90 degrees\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row>\n                                        <Col>\n                                            <Button onClick={this.reset}>\n                                                Reset\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Row>\n                        </Container>\n                        <br></br>\n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Col><img src={require('./sp1.png')} alt='Background' /></Col>\n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <Draggable>\n                                        <div><img style={{transform: `rotate(${this.state.angle}deg)`}} src={require('./scope1.png')} alt='Scope' /></div>\n                                    </Draggable>\n                                </Col>\n                                <Col>\n                                    <Draggable>\n                                        <div><img style={{transform: `rotate(${this.state.angle}deg)`}} src={require('./scope2.png')} alt='Scope' /></div>\n                                    </Draggable>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default function SPuzzle () {\n    return (\n        <App />\n    );\n}\n","import React, {useState} from 'react';\nimport Text from \"./centeredText\";\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\n\nlet count = 0;\nconst formStyle = {\n  width : 20,\n  marginLeft : \"2200%\"\n};\n\nclass KeyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);    \n    this.state = {\n      value : '',\n      disabled : false\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ value : event.target.value });\n  }\n\n  handleSubmit(event) {\n    if (!this.state.disabled) {\n      if (this.props.answer === this.state.value.toUpperCase()) {\n        count++;\n        console.log(count);\n        this.state.disabled = true;\n        alert(\"Correct\");\n      }\n      else {\n        alert(\"NO\");\n      }\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" value={this.state.value} style={formStyle}\n        onChange={this.handleChange} disabled={this.state.disabled} />\n          <br></br>\n          <input type=\"submit\" value=\" \" style={formStyle} />\n      </form>\n    );\n  }\n};\n\nfunction RenderAnswer(props) {\n  if (props.numCorrect === 13) {\n    return (\n      <div>\n        <br></br>\n        <h3><center>314159</center></h3>\n      </div>\n    );\n  }\n  else {\n    return (\n        <div>\n          <br></br>\n          <h3><center>The secret number will appear here.</center></h3>\n        </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n    constructor () {\n        super();\n        this.key = ['S', 'T', 'A', 'T', 'E', 'N', ' ',\n                    'I', 'S', 'L', 'A', 'N', 'D'];        \n        this.hints = [\n          \"***First Cipher***\",\n          \"D - 12\",\n          \"A - 2\",\n          \"N - 5\",\n          \"I - 7\",\n          \"E - 4\",\n          \"L - 9\",\n          \"space - 6\",\n          \"***Second Cipher***\",\n          \"H - 0\",\n          \"G - 1\",\n          \"G - 3\",\n          \"H - 8\",\n          \"Z - 10\",\n          \"M - 11\"\n        ];\n\n    }\n\n    render() {\n        return (\n          <div>\n              <Text text=\"There are two ciphers, that is all. Guess each character and hit\n                         the button below to see if that is the correct answer for that box.\n                         Hint #1: find where they go. Hint #2: It's opposite day.\"\n                   title=\"What is the WORST place on God's green Earth?\"/>\n              <Container>\n                  <RenderAnswer numCorrect={(count)}/>\n                  <Row>\n                      {this.key.map((value) => (\n                        <KeyForm answer={value} />\n                      ))}\n                  </Row>\n              </Container>\n              {this.hints.map((value) =>\n                <h3><center>{value}</center></h3>\n              )}\n          </div>\n        );\n    }\n}\n\nexport default function MoPuzzle () {\n    return (\n        <App />\n    );\n}","import React from 'react';\nimport { Carousel, Container } from 'react-bootstrap';\nimport CaroNum from \"./caroselFull\";\n\nexport default function Primes () {\n    const elements = [\"92,842,061\",\"\\\"156,839\",\"844,118\",\"3,337\",\"21,229\",\"989\",\"84,098,626\\\"\",\"11,122\",\"968,208,014,697\",\"989\"];\n    return (\n        <Carousel>\n            {elements.map((value, index) => {\n                return <Carousel.Item key={index}>\n                        <img\n                        className=\"d-block w-100\"\n                        src={require('./black.jpg')}\n                        />\n                        <Carousel.Caption>\n                        <h1>{value}</h1>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n            })}\n        </Carousel>\n    );\n}","import React, {useState} from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default class Notification extends React.Component {\n    render() {\n      return (\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Congratulations!\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h4>You got the answer correct and solved all of our puzzles!</h4>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.props.onHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Text from \"./centeredText\";\n\nclass Problem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"link\">\n        <a href=\"https://leetcode.com/problems/freedom-trail/\">\n          {\" \"}\n          Eels and Eskeetilors{\" \"}\n        </a>\n        <div>\n        <Text text=\"    int find_first_of(vector<int>& nums, int target){\n        if(nums.size() == 0){ return -1; }\n        \n        int left = 0;  int right = nums.size() - 1;\n        int returned = -1;\n        \n        while (left <= right){\n            int med = (left + right) / 2;\n            \n            if (nums[med] == target){\n                returned = med;\n                right = med - 1;\n            }\n            else if (nums[med] < target){\n                left = med + 1;\n            }\n            else{\n                right = med - 1;\n            }\n        }\n        \n        return returned;\n    }\n    \n    int find_last_of(vector<int>& nums, int target){\n        if(nums.size() == 0){ return -1; }\n        \n        int left = 0;  int right = nums.size() - 1;\n        int returned = -1;\n        \n        while (left <= right){\n            int med = (left + right) / 2;\n            \n            if (nums[med] == target){\n                returned = med;\n                left = med + 1;\n            }\n            else if (nums[med] < target){\n                left = med + 1;\n            }\n            else{\n                right = med - 1;\n            }\n        }\n        \n        return returned;\n    }\n    \n    vector<int> find_first_of_and_last_position_in_sorted_array(vector<int>& nums, int target) {\n        vector<int> returned;\n        \n        returned.push_back(find_first_of(nums, target));\n        returned.push_back(find_last_of(nums, target));\n        \n        return returned;\n    }\" title=\"Board\">\n     \n    </Text>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<Problem />, document.getElementById(\"Problem\"));\nexport default function NPuzzle () {\n  return (\n      <Problem />\n  );\n}\n","import React from 'react';\n\nimport Text from './centeredText.js';\nimport {Tabs, Tab, Button, Form, Container, Modal, Row, Col} from 'react-bootstrap';\nimport Joe from \"./joe-puzzle\";\nimport SPuzzle from \"./soph-puzzle\";\nimport MoPuzzle from \"./mo-puzzle\";\nimport Primes from './primeNumberProblem.js';\nimport Notification from './notification.js';\nimport NPuzzle from './nat-puzzle';\n\nconst hiddenB = {\n    background: 'transparent',\n    border: 'none',\n    padding: '0',\n  };\n\nfunction MemeHome (props) {\n    return (\n        <div>\n            Welcome! Your timer begins now.\n            <br></br>\n            Your journey has begun! To s\n            <button style={hiddenB} onClick={props.switch}>tart</button>\n            , the entrance must be found first. // TODO: fill in intro :D\n        </div>\n    );\n}\n\nclass BootStrapNavbar extends React.Component {\n    render () {\n        return (\n            <div>\n                <div style={{display: 'flex', justifyContent:'center', alignItems:'center'}}><Timer time={this.props.time}/></div>\n            </div>\n        );\n    }\n}\n\nclass Timer extends React.Component {\n    render() {\n      let x = parseInt(this.props.time);\n     return (\n       <Container>\n         <Row>\n           <Col><img src={require('./pg.ico')} alt='Logo' /></Col>\n           <Col xs={3}><Container><Row><Col><br></br></Col></Row><Row><h1 style={{color:'#126BDF', fontweight:'bold', fontSize: 28, fontFamily:'Rockwell,\"Courier Bold\",Courier,Georgia,Times,\"Times New Roman\",serif'}}>{\"DanGetRekt\"}</h1></Row></Container></Col>\n           <Col xs={8}>\n            <h1 style={{ fontSize: 40}}>{\"Time elapsed: \" + (\"0\"+Math.floor(x/3600)).slice(-2) + \":\" + (\"0\" + Math.floor(x/60)%60).slice(-2) + \":\" + (\"0\"+x % 60).slice(-2)}\n            </h1>\n           </Col>\n         </Row>\n       </Container>\n        );\n      }\n    }\n\nclass App extends React.Component {\n    constructor () {\n        super()\n        this.state = {\n          started: false,\n          timerStarted: false,\n          page1: true,\n          time: 0,\n          answer: '',\n          hasWon: false,\n          modalShow: false,\n          residualTries: 5,\n          hasLost: false,\n          wrongAns: false\n        }\n        this.toggleHidden = this.toggleHidden.bind(this)\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.comp = this.comp.bind(this)\n      }\n\n      startTimer() {\n        this.timer = setInterval(() => this.setState({\n          time: this.state.time + 1\n        }), 1000)\n      }\n\n      stopTimer() {\n        clearInterval(this.timer)\n      }\n\n      toggleHidden () {\n        this.setState({\n          page1: !this.state.page1\n        })\n      }\n\n      comp () {\n        var passwordHash = require('password-hash');\n        var hash = \"sha1$c0d128bc$1$4cc4058edddd6aec3b8d0be44dbace5c1f69eec6\"\n        //var answer = \"12345\";\n        \n        if(passwordHash.verify(this.state.answer ,hash)){\n          this.setState({modalShow:true});\n          this.stopTimer();\n        }\n        else {\n          this.setState({residualTries: this.state.residualTries - 1, wrongAns: true});\n          this.stopTimer();\n        }\n        \n      }\n      render () {\n        let modalClose = () => this.setState({ modalShow: false });\n        let gameStarted = () => this.setState({started: true});\n        let refreshPage = () => window.location.reload();\n        let closeWrongAns = () => this.setState({wrongAns: false});\n        if (this.state.started && !this.state.timerStarted) {\n          this.startTimer();\n          this.setState({timerStarted: true});\n        };\n        if (this.state.residualTries <= 0) this.state.hasLost = true;\n        return (\n            this.state.page1 ? (\n                <div>\n                    <Modal\n                        show = {!this.state.started}\n                        centered>\n                      <Modal.Header>\n                        <Modal.Title>DanGetRekt</Modal.Title>\n                      </Modal.Header>\n\n                      <Modal.Body>\n                        <p>Welcome to DanGetRekt, our puzzles page! Start the timer by clicking the start button, and let the games begin!</p>\n                      </Modal.Body>\n\n                      <Modal.Footer>\n                        <Button onClick={gameStarted}>Start</Button>\n                      </Modal.Footer>\n                    </Modal>\n\n                    <BootStrapNavbar time={this.state.time}/>\n                    <div>\n                        <MemeHome switch={this.toggleHidden}/>\n                    </div>\n                </div>\n            ) : (<div>\n                <BootStrapNavbar time={this.state.time}/>\n                <div>\n                    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n                        <Tab eventKey=\"home\" title=\"Home\">\n                            <Text title=\"Welcome to the Intern's Puzzles!\" text=\"Welcome to our intern puzzle page! We had \n                            a lot of fun with the boxes, and we wanted to make our own box. Unfortunately, we have absolutely\n                            no woodworking skills, only programming skills. As you can see we had to make do with what we\n                            had. To solve this puzzle set you must solve all four of our puzzles (in any order), take the sum\n                            of all the answers (they should be numbers, so if you get words you're doing it wrong), and then\n                            add ##### to the result. That number will be the combination to the lock puzzle. Good luck!\"/>\n                            <Container>\n                              <Form>\n                                <Form.Group controlId='formAns'>\n                                  <Form.Label>Your Answer</Form.Label>\n                                  <Form.Control type='ans' placeholder='Enter answer' onChange={e => this.state.answer=e.target.value} />\n                                  <Form.Text className=\"text-muted\">\n                                      XD\n                                  </Form.Text>\n                                </Form.Group>\n                              </Form>\n                              \n                              <Button onClick={this.comp}>\n                                  Submit\n                              </Button>\n\n                              <Modal\n                                show = {this.state.wrongAns}\n                                centered>\n                              <Modal.Header>\n                                <Modal.Title>Oops</Modal.Title>\n                              </Modal.Header>\n\n                              <Modal.Body>\n                                <p>Wrong Answer! You have {this.state.residualTries} {(this.state.residualTries == 1) ? \"try\" : \"tries\"} left.</p>\n                              </Modal.Body>\n\n                              <Modal.Footer>\n                                <Button onClick={closeWrongAns}>Continue</Button>\n                              </Modal.Footer>\n                            </Modal>\n\n                              <Modal\n                                show = {this.state.hasLost}\n                                centered>\n                              <Modal.Header>\n                                <Modal.Title>Oops</Modal.Title>\n                              </Modal.Header>\n\n                              <Modal.Body>\n                                <p>You have exceeded your limits! Try again next time.</p>\n                              </Modal.Body>\n\n                              <Modal.Footer>\n                                <Button onClick={refreshPage}>Restart</Button>\n                              </Modal.Footer>\n                            </Modal>\n\n                              <Notification\n                                show={this.state.modalShow}\n                                onHide={modalClose}\n                              />\n                            </Container>\n                        </Tab>\n                        <Tab eventKey=\"puzzle1\" title=\"Joe's Puzzle\" id=\"joesPuzzle\">\n                            <Joe />\n                                \n                            <Container>\n                              <Primes />\n                            </Container>\n                        </Tab>\n                        <Tab eventKey=\"puzzle2\" title=\"Sophie's Puzzle\">\n                            <SPuzzle />\n                        </Tab>\n                        <Tab eventKey=\"puzzle3\" title=\"Mahamadou's Puzzle\">\n                            <MoPuzzle />\n                        </Tab>\n                        <Tab eventKey=\"puzzle4\" title=\"Nathan's Puzzle\">\n                            <NPuzzle />\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n            )\n        );\n      }\n}\n\nexport default function MainApp () {\n  return (\n    <App />\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/black.aeb4c53c.jpg\";"],"sourceRoot":""}